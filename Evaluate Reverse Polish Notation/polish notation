import java.util.*;
class Solution {
    public int evalRPN(String[] tokens) {
        Stack<String> s1=new Stack<>();
        int a=0;
        int b=0;
        for(int i=0;i<tokens.length;i++)
        {
            if(i==0)
            {
                s1.push(tokens[i]);
            }
            else
            {
                if((tokens[i]).equals("+"))
                {
                  a=Integer.parseInt(s1.pop());
                  b=Integer.parseInt(s1.pop());
                  s1.push(String.valueOf(b+a));  
                }
                else if((tokens[i]).equals("-"))
                {
                  a=Integer.parseInt(s1.pop());
                  b=Integer.parseInt(s1.pop());
                  s1.push(String.valueOf(b-a));  
                }
                else if((tokens[i]).equals("*"))
                {
                  a=Integer.parseInt(s1.pop());
                  b=Integer.parseInt(s1.pop());
                  s1.push(String.valueOf(b*a));  
                }
               else if((tokens[i]).equals("/"))
                {
                  a=Integer.parseInt(s1.pop());
                  b=Integer.parseInt(s1.pop());
                  s1.push(String.valueOf(b/a));  
                }
                else
                {
                    s1.push(tokens[i]);
                }
                a=0;
                b=0;
            }

        }
        return Integer.parseInt(s1.get(0));
    }
}
